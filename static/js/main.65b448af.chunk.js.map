{"version":3,"sources":["models/index.ts","utils/grid-operations.ts","store.ts","components/control-panel/timer/index.tsx","components/common/ButtonController.tsx","utils/timeutils.ts","components/upload-record/index.tsx","utils/outside-click.ts","components/game/CellInput.tsx","components/game/Cell.tsx","components/game/Row.tsx","components/game/Game.tsx","components/game/index.ts","components/header/HeaderButton.tsx","components/header/NavItem.tsx","components/header/index.tsx","components/modals/BaseModal.tsx","components/modals/ChallengeInitializer.tsx","components/modals/SoloInitializer.tsx","components/leaderboard/index.tsx","components/right-side-panel/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameSize","ModalState","GameState","GameMode","gridToGameModel","grid","map","row","v","value","isCorrect","isDeletable","isGameSolved","axiosClient","axios","create","baseURL","process","REACT_APP_BACKEND_URI","INITIAL_SIZE","normal","size","Array","fill","solvedGrid","getEmptyGrid","INITIAL_SOLVED_GRID","INITIAL_GRID","createGrid","set","get","gameId","undefined","records","setGrid","id","state","RUNNING","getCell","column","setCell","numberGrid","r","squareSize","Math","sqrt","separators","from","length","_","i","to","includes","columnValues","square","rowSep","colSep","c","push","isValidValue","gameOver","FINISHED","useStore","setSize","createSize","mode","SOLO","EMPTY","modalState","NONE","setModalState","time","hints","setState","a","NEW","data","hint","loop","rowIndex","columnIndex","cell","isOver","setTime","addRecord","record","concat","createController","Timer","useStopwatch","autoStart","seconds","minutes","pause","reset","useEffect","className","floor","CustomButton","displayName","onClick","disabled","isActive","type","toTime","score","Date","toISOString","substr","UploadRecord","useState","userName","setUserName","uploadRecord","useMutation","post","onSuccess","onChange","e","target","placeholder","mutate","useOutsideClick","ref","callback","handleClick","current","contains","document","addEventListener","removeEventListener","CellInput","keys","getReadableValue","Cell","hasBottomBorder","hasRightBorder","s","React","popoverShow","setPopoverShow","cellRef","createRef","popoverRef","closePopover","createPopper","placement","newValue","onValueChange","isSection","index","Row","cellGrid","customStyles","content","top","left","right","bottom","marginRight","transform","display","justifyContent","flexWrap","Game","gameGrid","isOpen","onAfterClose","style","HeaderButton","NavItem","children","Header","CHALLENGE","BaseModal","title","showModal","closeModal","ChallengeInitializer","close","SoloInitializer","small","LOADING","then","game","LeaderBoard","store","RightSidePanel","openTab","setOpenTab","role","preventDefault","href","App","queryClient","QueryClient","client","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2HAAYA,EAOAC,EA0BAC,EASAC,E,mEA1CAH,O,iBAAAA,I,oBAAAA,M,cAOAC,O,qBAAAA,I,eAAAA,I,yBAAAA,I,gBAAAA,M,cA0BAC,O,iBAAAA,I,qBAAAA,I,qBAAAA,I,aAAAA,I,uBAAAA,I,wBAAAA,M,cASAC,O,eAAAA,I,0BAAAA,M,2ECnCZ,SAASC,EAAgBC,GACvB,OAAOA,EAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAID,KAAI,SAAAE,GAAO,MAAO,CAAEC,MAAOD,EAAGE,UAAiB,IAANF,EAASG,YAAmB,IAANH,SAe5F,SAASI,EAAaP,GAA+B,IAAD,gBAChCA,GADgC,IAClD,2BAAwB,CAAC,IAAD,EAAbE,EAAa,sBACFA,GADE,IACtB,2BAAyB,CAAC,IAAfE,EAAc,QACvB,IAAKA,EAAMC,WAA6B,IAAhBD,EAAMA,MAC5B,OAAO,GAHW,gCAD0B,8BAQlD,OAAO,EAmCF,I,iBC1DDI,EAAcC,IAAMC,OAAO,CAC/BC,QAASC,mIAAYC,wBAGjBC,EAAenB,EAASoB,OAC9B,EDDA,SAAsBC,GACpB,IAAMhB,EAAmB,IAAIiB,MAAMD,GAChCE,KAAK,GACLjB,KAAI,kBAAM,IAAIgB,MAAMD,GAAME,KAAK,MAClC,MAAO,CACLC,WAAYnB,EACZA,KAAMD,EAAgBC,ICLsCoB,CAAaN,GAAzDO,EAApB,EAAQF,WAAuCG,EAA/C,EAAyCtB,KA0BnCuB,EAAa,SAACC,EAAsBC,GAAvB,MAAiD,CAClEN,WAAYE,EACZrB,KAAMsB,EACNI,YAAQC,EACRC,QAAS,GACTC,QAAS,YAAuD,IAApD7B,EAAmD,EAAnDA,KAAMmB,EAA6C,EAA7CA,WAAYW,EAAiC,EAAjCA,GAAId,EAA6B,EAA7BA,KAAMY,EAAuB,EAAvBA,QACtCJ,GAAI,iBAAO,CACTL,WAAYA,EACZnB,KAAMD,EAAgBC,GACtB0B,OAAQI,EACRF,QAASA,EACTG,MAAOlC,EAAUmC,QACjBhB,KAAMA,OAGViB,QAAS,SAAC/B,EAAagC,GACrB,OAAOT,IAAMzB,KAAKE,GAAKgC,IAEzBC,QAAS,SAACjC,EAAagC,EAAgB9B,GACrC,IAAMJ,EAAOyB,IAAMzB,KACbgB,EAAOS,IAAMT,KACboB,EAAapC,EAAKC,KAAI,SAAAoC,GAAC,OAAIA,EAAEpC,KAAI,SAAAE,GAAC,OAAIA,EAAEC,YAC9CJ,EAAKE,GAAKgC,GAAQ7B,UD1BtB,SAAsBL,EAAkBE,EAAagC,EAAgB9B,EAAeY,GAClF,IAAMsB,EAAaC,KAAKC,KAAKxB,GACvByB,EAA4BxB,MAAMyB,KAAK,CAAEC,OAAQL,IAAc,SAACM,EAAGC,GAAQ,MAAO,CAAEH,KAAMG,EAAIP,EAAYQ,IAAKD,EAAI,GAAKP,MAC9H,IAAKtC,EAAKE,GAAK6C,SAAS3C,GAAQ,CAC9B,IAAM4C,EAAehD,EAAKC,KAAI,SAACoC,GAAD,OAAOA,EAAEH,MAEvC,IAAKc,EAAaD,SAAS3C,GAAQ,CAEjC,IAFiC,EAE3B6C,EAAmB,GAFQ,cAIZR,GAJY,IAIjC,2BAAiC,CAAC,IAAvBS,EAAsB,QAC/B,GAAIhD,GAAOgD,EAAOR,MAAQxC,EAAMgD,EAAOJ,GAAI,CAAC,IAAD,gBACpBL,GADoB,IACzC,2BAAiC,CAAC,IAAvBU,EAAsB,QAC/B,GAAIjB,GAAUiB,EAAOT,MAAQR,EAASiB,EAAOL,GAC3C,IAAK,IAAIT,EAAIa,EAAOR,KAAML,EAAIa,EAAOJ,GAAIT,IACvC,IAAK,IAAIe,EAAID,EAAOT,KAAMU,EAAID,EAAOL,GAAIM,IACvCH,EAAOI,KAAKrD,EAAKqC,GAAGe,KALa,iCALZ,8BAiBjC,IAAKH,EAAOF,SAAS3C,GACnB,OAAO,GAIb,OAAO,ECFyBkD,CAAalB,EAAYlC,EAAKgC,EAAQ9B,EAAOY,GAC3EhB,EAAKE,GAAKgC,GAAQ9B,MAAQA,EAC1B,IAAMmD,EAAWhD,EAAaP,GAE5BwB,EADE+B,EACE,CACFxB,MAAOlC,EAAU2D,SACjBxD,KAAMA,GAGJ,CACFA,KAAMA,OAsGRyD,EAAW/C,KAAc,SAACc,EAAKC,GAAN,mBAAC,2BAzJb,SAACD,EAAsBC,GAAvB,MAAiD,CAClET,KAAMF,EACN4C,QAAS,SAAC1C,GACRQ,EAAI,CACFR,KAAMA,MAsJP2C,CAAWnC,IACXD,EAAWC,EAAKC,IArFI,SAACD,EAAsBC,GAAvB,MAAiD,CACxEmC,KAAM9D,EAAS+D,KACf9B,MAAOlC,EAAUiE,MACjBC,WAAYnE,EAAWoE,KACvBC,cAAe,SAAC9D,GACdqB,EAAI,CACFuC,WAAY5D,KAGhB+D,KAAM,EACNC,MAAO,EACPC,SAAS,WAAD,4BAAE,WAAOrC,EAAkBL,GAAzB,+BAAA2C,EAAA,yDACJtC,IAAUlC,EAAUyE,IADhB,qBAEF5C,EAFE,gCAGiClB,EAAYiB,IAAZ,iBAAmCC,IAHpE,gBAGYE,EAHZ,EAGI2C,KAAQ3C,QAChBJ,EAAI,CACFO,MAAOA,EACPH,QAASA,EACTuC,MAAO,IAPL,wCAW6D3D,EAAYiB,IAAZ,wBAA0CA,IAAMT,OAX7G,qBAWIuD,KAAQvE,EAXZ,EAWYA,KAAM8B,EAXlB,EAWkBA,GAAIX,EAXtB,EAWsBA,WAAYH,EAXlC,EAWkCA,KAAMY,EAXxC,EAWwCA,QAC5CJ,EAAI,CACFO,MAAOA,EACP/B,KAAMD,EAAgBC,GACtBmB,WAAYA,EACZH,KAAMA,EACNU,OAAQI,EACRF,QAASA,EACTuC,MAAO,IAnBL,gCAyBN3C,EAAI,CACFO,MAAOA,IA1BH,4CAAF,qDAAC,GA8BTyC,KAAM,WACJ,MAA6B/C,IAArBN,EAAR,EAAQA,WAAYnB,EAApB,EAAoBA,KACpByE,EACA,IAAK,IAAIC,EAAW,EAAGA,EAAW1E,EAAK2C,OAAQ+B,IAE7C,IADA,IAAMxC,EAASlC,EAAK0E,GACXC,EAAc,EAAGA,EAAczC,EAAOS,OAAQgC,IAAe,CACpE,IAAMC,EAAO1C,EAAOyC,GACpB,GAAmB,IAAfC,EAAKxE,MAAa,CACpBwE,EAAKxE,MAAQe,EAAWuD,GAAUC,GAClCC,EAAKvE,WAAY,EACjB,MAAMoE,GAIZ,IAAMI,EAAStE,EAAaP,GAE1BwB,EADEqD,EACE,CACF9C,MAAOlC,EAAU2D,SACjBxD,KAAMA,EACNmE,MAAO1C,IAAM0C,MAAQ,GAGnB,CACFnE,KAAMA,EACNmE,MAAO1C,IAAM0C,MAAQ,KAI3BW,QAAS,SAACZ,GACR1C,EAAI,CACF0C,KAAMA,KAGVa,UAAW,SAACC,GACVxD,EAAI,CACFI,QAASH,IAAMG,QAAQqD,OAAOD,OAU/BE,CAAiB1D,EAAKC,OAMZgC,Q,OCnJA0B,MA9Bf,WACE,MAA2B1B,IAAnB1B,EAAR,EAAQA,MAAO+C,EAAf,EAAeA,QACf,EAA2CM,uBAAa,CACtDC,WAAW,IADLC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,MAajC,OATAC,qBAAU,WACJ3D,IAAUlC,EAAUmC,QACtByD,KAEAD,IACAV,EAAQQ,EAAoB,GAAVC,MAGnB,CAACxD,IAEF,sBAAK4D,UAAU,wFAAf,UACE,sBAAKA,UAAU,OAAf,UACI,8BAAOpD,KAAKqD,MAAML,EAAU,MAC5B,8BAAOA,EAAU,QAErB,oCACA,sBAAKI,UAAU,OAAf,UACI,8BAAOpD,KAAKqD,MAAMN,EAAU,MAC5B,8BAAOA,EAAU,Y,yBCNZO,MAvBf,YAUI,IATFC,EASC,EATDA,YACAC,EAQC,EARDA,QAEAC,GAMC,EAPDC,SAOC,EANDD,UAOA,OACE,uBACEE,KAAK,SACLP,UACE,qFAEFvF,MAAO0F,EACPC,QAAS,kBAAMA,KACfC,SAAUA,KCnBHG,EAAS,SAACC,GACrB,OAAO,IAAIC,KAAa,IAARD,GAAcE,cAAcC,OAAO,GAAI,ICqD1CC,MA9Cf,WACE,MAA0C/C,IAAlCW,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,KAAMxC,EAAxB,EAAwBA,OAAQyC,EAAhC,EAAgCA,MAChC,EAAgCsC,mBAAiB,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMnG,EAAcC,IAAMC,OAAO,CAC/BC,QAASC,mIAAYC,wBAGjB+F,EAAeC,uBACnB,SAACtC,GAAD,OAAU/D,EAAYsG,KAAZ,WAA6BvC,KACvC,CACEwC,UAAW,WACT3C,EAASvE,EAAUyE,IAAK5C,MAK9B,OACE,gCACE,sDAAyByE,EAAOjC,EAAe,GAARC,MACvC,uBACE+B,KAAK,OACLc,SAAU,SAACC,GAAD,OAAON,EAAYM,EAAEC,OAAO9G,QACtCA,MAAOsG,EACPS,YAAY,6BAEd,cAAC,EAAD,CACErB,YAAY,eACZC,QAAS,kBAAM3B,EAASvE,EAAUiE,UAEpC,cAAC,EAAD,CACEgC,YAAY,SACZC,QAAS,WACP,IAAMf,EAAoB,CACxBtD,OAAQA,GAAU,GAClB0E,MAAOlC,EAAe,GAARC,EACduC,SAAUA,GAEZE,EAAaQ,OAAOpC,IAEtBgB,SAA+B,KAAb,OAARU,QAAQ,IAARA,OAAA,EAAAA,EAAU/D,c,SC9Bb0E,EAhBS,SAACC,EAAUC,GACjC,IAAMC,EAAc,SAACP,GACfK,EAAIG,UAAYH,EAAIG,QAAQC,SAAST,EAAEC,SACzCK,KAIJ7B,qBAAU,WAGR,OAFAiC,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASE,oBAAoB,QAASL,QCO7BM,EAhBG,SAAC,GAAuC,IAArC9G,EAAoC,EAApCA,KAAM+E,EAA8B,EAA9BA,QACzB,OACE,qBAAKJ,UAAS,yBAAoBpD,KAAKC,KAAKxB,GAA9B,gBAAd,SACGC,MAAMyB,KAAKzB,MAAMD,GAAM+G,QAAQ9H,KAAI,SAAC4C,GAAD,OAClC,qBAEE8C,UAAU,8DACVI,QAAS,kBAAMA,EAAQlD,EAAI,IAH7B,SAKGA,EAAI,GAJAA,SCOTmF,EAAmB,SAAC5H,GACxB,OAAiB,IAAVA,EAAc,GAAKA,GA+Eb6H,MA5Ef,YAAsG,IAAtF/H,EAAqF,EAArFA,IAAKgC,EAAgF,EAAhFA,OAAQ9B,EAAwE,EAAxEA,MAAOE,EAAiE,EAAjEA,YAAaU,EAAoD,EAApDA,KAAMkH,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,eAChEhG,EAAUsB,GAAS,SAAC2E,GAAD,OAAOA,EAAEjG,WAElC,EAAsCkG,IAAM5B,UAAS,GAArD,mBAAO6B,EAAP,KAAoBC,EAApB,KACMC,EAAUC,sBACVC,EAAaD,sBAUbE,EAAe,WACnBJ,GAAe,IAqBjB,OAfAlB,EAAgBmB,GAAS,kBAAMG,OAgB7B,qCACE,qBACEhD,UAAS,0BACP2C,EAAc,gBAAkB,GADzB,YAhBTJ,GAAmBC,EACd,0CAELD,EACK,wCAELC,EACK,wCAGF,SAMM,YAITpC,QAAS,WACHzF,GArCc,OAApBkI,EAAQf,SAA2C,OAAvBiB,EAAWjB,UACzCmB,YAAaJ,EAAQf,QAASiB,EAAWjB,QAAS,CAChDoB,UAAW,QAEbN,GAAe,KAqCbjB,IAAKkB,EAVP,SAYE,sBACE7C,UACE,UAAGrF,EAAc,KAAO,cACxB,4EAHJ,SAMG0H,EAAiB5H,OAGtB,qBACEuF,WACG2C,EAAc,GAAK,WACpB,2FAEFhB,IAAKoB,EALP,SAOE,cAAC,EAAD,CACE1H,KAAMA,EACN+E,QAAS,SAAC+C,GAAD,OAnDK,SAAC1I,GACrB+B,EAAQjC,EAAKgC,EAAQ9B,GACrBuI,IAiD6BI,CAAcD,YCzD/C,SAASE,EAAUC,EAAejI,GAChC,OAAQiI,EAAQ,GAAK1G,KAAKC,KAAKxB,KAAU,EAG5BkI,MA5Bf,YAEE,IAFsC,IAAzBD,EAAwB,EAAxBA,MAAO/I,EAAiB,EAAjBA,IACdiJ,EAAW,GACRxE,EAAc,EAAGA,EAAczE,EAAIyC,OAAQgC,IAAe,CACjE,IAAMC,EACJ,cAAC,EAAD,CAEEsD,gBAAiBc,EAAUC,EAAO/I,EAAIyC,QACtCwF,eAAgBa,EAAUrE,EAAazE,EAAIyC,QAC3CzC,IAAK+I,EACL/G,OAAQyC,EACR3D,KAAMd,EAAIyC,OACVvC,MAAOF,EAAIyE,GAAavE,MACxBE,YAAaJ,EAAIyE,GAAarE,aAPzBqE,GAUTwE,EAAS9F,KAAKuB,GAEhB,OACI,qBAAKe,UAAS,yBAAoBzF,EAAIyC,QAAtC,SACGwG,EAASlJ,KAAI,SAACmD,GAAD,OAAOA,QCnBvBgG,EAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,OACTC,eAAgB,eAChBC,SAAU,SAgCCC,IChDAA,EDoBf,WAKE,IAJA,MAAkCtG,IAA1BzD,EAAR,EAAQA,KAAM+B,EAAd,EAAcA,MAAOqC,EAArB,EAAqBA,SAEf4F,EAAW,GAERtF,EAAW,EAAGA,EAAW1E,EAAK2C,OAAQ+B,IAC7CsF,EAAS3G,KAAK,cAAC,EAAD,CAAoB4F,MAAOvE,EAAUxE,IAAKF,EAAK0E,IAArCA,IAE1B,OACE,sBAAKiB,UAAU,kCAAf,UACE,qBACEA,UAAS,yBACP3F,EAAK2C,OADE,6BADX,SAKGqH,EAAS/J,KAAI,SAACC,GAAD,OAASA,OAEzB,cAAC,IAAD,CACE+J,OAAQlI,IAAUlC,EAAU2D,SAC5B0G,aAAc,kBAAM9F,EAASvE,EAAUiE,QACvCqG,MAAOf,EAHT,SAKE,cAAC,EAAD,UE5BOgB,MAZf,YAA8D,IAAtChK,EAAqC,EAArCA,MAAO2F,EAA8B,EAA9BA,QAC7B,OACE,wBACEJ,UAAU,uPACVO,KAAK,SACLH,QAAS,kBAAMA,KAHjB,SAKG3F,KCRQiK,EAHW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACxB,oBAAI3E,UAAU,gBAAd,SAA+B2E,KCyClBC,MArCf,WACE,MAAkC9G,IAA1B/B,EAAR,EAAQA,OAAQuC,EAAhB,EAAgBA,cAEhB,OACE,mCACE,qBAAK0B,UAAU,yEAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,qBAAKA,UAAU,qFAAf,SACE,mBAAGA,UAAU,wFAAb,SACGjE,GAAkB,aAGvB,qBAAKiE,UAAW,8BAAhB,SACE,qBAAIA,UAAU,kCAAd,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CACEvF,MAAM,YACN2F,QAAS,kBAAM9B,EAAcrE,EAAW4K,gBAG5C,cAAC,EAAD,UACE,cAAC,EAAD,CACEpK,MAAM,OACN2F,QAAS,kBAAM9B,EAAcrE,EAAWiE,wBCa3C4G,EApC6B,SAAC,GAKtC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,UAEAL,GACI,EAFJM,WAEI,EADJN,UAEA,OACE,mCACGK,EACC,qCACE,qBAAKhF,UAAU,wHAAf,SACE,qBAAKA,UAAU,yCAAf,SAEE,sBAAKA,UAAU,uGAAf,UAEE,qBAAKA,UAAU,2DAAf,SACE,oBAAGA,UAAU,2DAAb,UACG+E,EACD,uBAAM/E,UAAU,gDAAhB,UACG,IADH,eAOH2E,SAIP,qBAAK3E,UAAU,8CAEf,QCOKkF,EAvCc,WAC3B,MAAsCpH,IAA9BM,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,cACd6G,EAAQ,kBAAM7G,EAAcrE,EAAWoE,OAC7C,OACE,eAAC,EAAD,CACE0G,MAAO,YACPC,UAAW5G,IAAenE,EAAW4K,UACrCI,WAAY,kBAAME,KAHpB,UAKE,qBAAKnF,UAAU,yBAAf,SACE,mBAAGA,UAAU,iDAAb,0TASF,sBAAKA,UAAU,wFAAf,UACE,wBACEA,UAAU,8JACVO,KAAK,SACLH,QAAS,kBAAM+E,KAHjB,mBAOA,wBACEnF,UAAU,yMACVO,KAAK,SACLH,QAAS,kBAAM+E,KAHjB,iCCsCOC,GAhES,WACtB,MAA8DtH,IAAtDM,EAAR,EAAQA,WAAYlC,EAApB,EAAoBA,QAASoC,EAA7B,EAA6BA,cAAeP,EAA5C,EAA4CA,QAAS1C,EAArD,EAAqDA,KAC/C8J,EAAQ,kBAAM7G,EAAcrE,EAAWoE,OACvCxD,EAAcC,IAAMC,OAAO,CAC/BC,QAASC,mIAAYC,wBASvB,OACE,eAAC,EAAD,CACE6J,MAAO,OACPC,UAAW5G,IAAenE,EAAWiE,KACrC+G,WAAY,kBAAME,KAHpB,UAKE,sBAAKnF,UAAU,iDAAf,UACE,wBACEA,UAAS,UACP3E,IAASrB,EAASqL,MACd,gBACA,uEAHG,6KAKT9E,KAAK,SACLH,QAAS,kBAAMrC,EAAQ/D,EAASqL,QAPlC,mBAWA,wBACErF,UAAS,UACP3E,IAASrB,EAASoB,OACd,gBACA,uEAHG,wKAKTmF,KAAK,SACLH,QAAS,kBAAMrC,EAAQ/D,EAASoB,SAPlC,uBAaF,sBAAK4E,UAAU,wFAAf,UACE,wBACEA,UAAU,gKACVO,KAAK,SACLH,QAAS,kBAAM+E,KAHjB,mBAOA,wBACEnF,UAAU,8LACVO,KAAK,SACLH,QAAS,kBAhDf9B,EAAcrE,EAAWqL,cACzBzK,EAAYiB,IAAZ,wBAA0CT,IAAQkK,MAAK,YAAqB,IAAZC,EAAW,EAAjB5G,KACxD1C,EAAQsJ,GACRlH,EAAcrE,EAAWoE,UA0CvB,0BC9BOoH,OAxBf,WACE,IAAMxJ,EAAU6B,GAAS,SAAC4H,GAAD,OAAWA,EAAMzJ,WAE1C,OACE,8BACGA,EAAQe,OACPf,EAAQ3B,KAAI,SAAC+E,EAAQnC,GAAT,OACV,sBAAK8C,UAAU,YAAf,UACE,qBAAIA,UAAU,OAAd,UAAsB9C,EAAI,EAA1B,OACA,oBAAI8C,UAAU,OAAd,SAAsBQ,EAAOnB,EAAOoB,SACpC,4BAAIpB,EAAO0B,aAHmB7D,MAOlC,qBAAK8C,UAAU,YAAf,SACE,4BACE,sECqEG2F,GArFQ,WACrB,MAA8BjD,IAAM5B,SAAS,GAA7C,mBAAO8E,EAAP,KAAgBC,EAAhB,KACA,OACE,mCACE,qBAAK7F,UAAU,0BAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBACEA,UAAU,8CACV8F,KAAK,UAFP,UAIE,oBAAI9F,UAAU,8CAAd,SACE,mBACEA,UACE,iFACa,IAAZ4F,EACG,0BACA,2BAENxF,QAAS,SAACkB,GACRA,EAAEyE,iBACFF,EAAW,IAEb,cAAY,MACZG,KAAK,SACLF,KAAK,UAbP,2BAkBF,oBAAI9F,UAAU,8CAAd,SACE,mBACEA,UACE,iFACa,IAAZ4F,EACG,0BACA,2BAENxF,QAAS,SAACkB,GACRA,EAAEyE,iBACFF,EAAW,IAEb,cAAY,MACZG,KAAK,SACLF,KAAK,UAbP,0BAmBJ,qBAAK9F,UAAU,oFAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAuB,IAAZ4F,EAAgB,QAAU,SAAUzJ,GAAG,QAAvD,SACE,cAAC,GAAD,MAEF,qBAAK6D,UAAuB,IAAZ4F,EAAgB,QAAU,SAAUzJ,GAAG,QAAvD,SACE,sLAIE,uBACA,uBALF,sGAUF,qBAAK6D,UAAuB,IAAZ4F,EAAgB,QAAU,SAAUzJ,GAAG,QAAvD,SACE,mKAIE,uBACA,uBALF,uGC5CH8J,OAlBf,WACE,IAAMC,EAAc,IAAIC,cACxB,OACE,eAAC,sBAAD,CAAqBC,OAAQF,EAA7B,UACE,cAAC,EAAD,IACA,sBAAKlG,UAAU,2CAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,wBAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,UAGN,cAAC,EAAD,IACA,cAAC,GAAD,QCPSqG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/E,SAASgF,eAAe,SAM1BX,M","file":"static/js/main.65b448af.chunk.js","sourcesContent":["export enum GameSize {\n  small = 4,\n  normal = 9,\n  //FIXME: NOT PERFORMANT ENOUGH\n  // large = 16,\n}\n\nexport enum ModalState {\n  LOADING,\n  SOLO,\n  CHALLENGE,\n  NONE,\n};\n\nexport interface CellModel {\n  value: number\n  isDeletable: boolean\n  isCorrect: boolean\n}\nexport interface GameDto {\n  id: string;\n  size: number;\n  solvedGrid: number[][];\n  grid: number[][];\n  records: RecordDto[];\n}\n\nexport interface RecordDto {\n  userName: string\n  gameId: string\n  score: number\n}\n\nexport enum GameState {\n  EMPTY,\n  RUNNING,\n  STOPPED,\n  NEW,\n  FETCHING,\n  FINISHED\n}\n\nexport enum GameMode {\n  SOLO,\n  CHALLENGE\n}\n\nexport interface GameModel {\n  solvedGrid: number[][]\n  grid: CellModel[][]\n}","import { CellModel, GameModel, GameSize } from \"../models\";\n\ntype SquareRange = {\n  from: number,\n  to: number\n}\n\nfunction gridToGameModel(grid: number[][]): CellModel[][] {\n  return grid.map(row => row.map(v => { return { value: v, isCorrect: v !== 0, isDeletable: v === 0 } as CellModel }))\n}\n\n\nfunction getEmptyGrid(size: GameSize): GameModel {\n  const grid: number[][] = new Array(size)\n    .fill(0)\n    .map(() => new Array(size).fill(0));\n  return {\n    solvedGrid: grid,\n    grid: gridToGameModel(grid)\n  }\n\n}\n\nfunction isGameSolved(grid: CellModel[][]): boolean {\n  for (const row of grid) {\n    for (const value of row) {\n      if (!value.isCorrect || value.value === 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\nfunction isValidValue(grid: number[][], row: number, column: number, value: number, size: GameSize): boolean {\n  const squareSize = Math.sqrt(size);\n  const separators: SquareRange[] = Array.from({ length: squareSize }, (_, i) => { return { from: i * squareSize, to: (i + 1) * squareSize } });\n  if (!grid[row].includes(value)) {\n    const columnValues = grid.map((r) => r[column]);\n    // check if value fits column\n    if (!columnValues.includes(value)) {\n      // check if value fits square\n      const square: number[] = [];\n\n      for (const rowSep of separators) {\n        if (row >= rowSep.from && row < rowSep.to) {\n          for (const colSep of separators) {\n            if (column >= colSep.from && column < colSep.to) {\n              for (let r = rowSep.from; r < rowSep.to; r++) {\n                for (let c = colSep.from; c < colSep.to; c++) {\n                  square.push(grid[r][c])\n                }\n              }\n            }\n          }\n        }\n      }\n      if (!square.includes(value)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport const deepCopy = <T>(target: T): T => {\n  if (target === null) {\n    return target;\n  }\n  if (target instanceof Array) {\n    const cp = [] as any[];\n    (target as any[]).forEach((v) => { cp.push(v); });\n    return cp.map((n: any) => deepCopy<any>(n)) as any;\n  }\n  if (typeof target === 'object' && target !== {}) {\n    const cp = { ...(target as { [key: string]: any }) } as { [key: string]: any };\n    Object.keys(cp).forEach(k => {\n      cp[k] = deepCopy<any>(cp[k]);\n    });\n    return cp as T;\n  }\n  return target;\n};\n\nexport { isValidValue, isGameSolved, getEmptyGrid, gridToGameModel }","import create from \"zustand\"\nimport { mountStoreDevtool } from 'simple-zustand-devtools';\nimport { GetState, SetState } from \"zustand\";\n\nimport { CellModel, GameDto, GameMode, GameSize, GameState, ModalState, RecordDto } from \"./models\"\nimport { isValidValue, isGameSolved, getEmptyGrid, gridToGameModel } from \"./utils/grid-operations\";\nimport axios from \"axios\";\n\nconst axiosClient = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URI,\n});\n\nconst INITIAL_SIZE = GameSize.normal\nconst { solvedGrid: INITIAL_SOLVED_GRID, grid: INITIAL_GRID } = getEmptyGrid(INITIAL_SIZE)\n\ninterface SizeState {\n  size: GameSize;\n  setSize: (size: GameSize) => void;\n}\n\nconst createSize = (set: SetState<State>, get: GetState<State>) => ({\n  size: INITIAL_SIZE,\n  setSize: (size: GameSize) => {\n    set({\n      size: size,\n    })\n  },\n});\n\ninterface GridState {\n  solvedGrid: number[][];\n  grid: CellModel[][];\n  gameId: string | undefined;\n  records: RecordDto[];\n  setGrid: (dto: GameDto) => void;\n  getCell: (row: number, column: number) => CellModel;\n  setCell: (row: number, column: number, value: number) => void;\n}\n\nconst createGrid = (set: SetState<State>, get: GetState<State>) => ({\n  solvedGrid: INITIAL_SOLVED_GRID,\n  grid: INITIAL_GRID,\n  gameId: undefined,\n  records: [],\n  setGrid: ({ grid, solvedGrid, id, size, records }: GameDto) => {\n    set(() => ({\n      solvedGrid: solvedGrid,\n      grid: gridToGameModel(grid),\n      gameId: id,\n      records: records,\n      state: GameState.RUNNING,\n      size: size\n    }))\n  },\n  getCell: (row: number, column: number) => {\n    return get().grid[row][column]\n  },\n  setCell: (row: number, column: number, value: number) => {\n    const grid = get().grid\n    const size = get().size;\n    const numberGrid = grid.map(r => r.map(v => v.value));\n    grid[row][column].isCorrect = isValidValue(numberGrid, row, column, value, size);\n    grid[row][column].value = value\n    const gameOver = isGameSolved(grid)\n    if (gameOver) {\n      set({\n        state: GameState.FINISHED,\n        grid: grid\n      })\n    } else {\n      set({\n        grid: grid,\n      })\n    }\n  }\n})\n\ninterface ControllerState {\n  mode: GameMode;\n  state: GameState;\n  modalState: ModalState;\n  setModalState: (v: ModalState) => void;\n  time: number;\n  hints: number;\n  setState: (state: GameState, gameId?: string) => void;\n  hint: () => void;\n  setTime: (time: number) => void;\n  addRecord: (record: RecordDto) => void;\n}\n\nconst createController = (set: SetState<State>, get: GetState<State>) => ({\n  mode: GameMode.SOLO,\n  state: GameState.EMPTY,\n  modalState: ModalState.NONE,\n  setModalState: (v: ModalState) => {\n    set({\n      modalState: v\n    })\n  },\n  time: 0,\n  hints: 0,\n  setState: async (state: GameState, gameId?: string) => {\n    if (state === GameState.NEW) {\n      if (gameId) {\n        const { data: { records }, } = await axiosClient.get<GameDto>(`/games/${gameId}`)\n        set({\n          state: state,\n          records: records,\n          hints: 0,\n        })\n\n      } else {\n        const { data: { grid, id, solvedGrid, size, records }, } = await axiosClient.get<GameDto>(`/games/random/${get().size}`)\n        set({\n          state: state,\n          grid: gridToGameModel(grid),\n          solvedGrid: solvedGrid,\n          size: size,\n          gameId: id,\n          records: records,\n          hints: 0,\n        })\n\n      }\n\n    } else {\n      set({\n        state: state\n      })\n    }\n  },\n  hint: () => {\n    const { solvedGrid, grid } = get();\n    loop:\n    for (let rowIndex = 0; rowIndex < grid.length; rowIndex++) {\n      const column = grid[rowIndex];\n      for (let columnIndex = 0; columnIndex < column.length; columnIndex++) {\n        const cell = column[columnIndex];\n        if (cell.value === 0) {\n          cell.value = solvedGrid[rowIndex][columnIndex];\n          cell.isCorrect = true\n          break loop;\n        }\n      }\n    }\n    const isOver = isGameSolved(grid)\n    if (isOver) {\n      set({\n        state: GameState.FINISHED,\n        grid: grid,\n        hints: get().hints + 1\n      })\n    } else {\n      set({\n        grid: grid,\n        hints: get().hints + 1\n      })\n    }\n  },\n  setTime: (time: number) => {\n    set({\n      time: time\n    })\n  },\n  addRecord: (record: RecordDto) => {\n    set({\n      records: get().records.concat(record)\n    })\n  }\n})\n\nexport type State = SizeState & GridState & ControllerState;\n\nconst useStore = create<State>((set, get) => ({\n  ...createSize(set, get),\n  ...createGrid(set, get),\n  ...createController(set, get),\n}));\n\nif (process.env.NODE_ENV === 'development') {\n  mountStoreDevtool('Store', useStore as any);\n}\nexport default useStore","import { useEffect } from \"react\";\nimport { useStopwatch } from \"react-timer-hook\";\nimport { GameState } from \"../../../models\";\nimport useStore from \"../../../store\";\n\nfunction Timer() {\n  const { state, setTime } = useStore();\n  const { seconds, minutes, pause, reset } = useStopwatch({\n    autoStart: false,\n  });\n\n  useEffect(() => {\n    if (state === GameState.RUNNING) {\n      reset();\n    } else {\n      pause();\n      setTime(seconds + minutes * 60);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n  return (\n    <div className=\"text-center flex w-full items-center justify-center text-4xl mr-1 font-extralight p-4\">\n      <div className=\"flex\">\n          <div >{Math.floor(minutes / 10)}</div>\n          <div >{minutes % 10}</div>\n      </div>\n      <div>:</div>\n      <div className=\"flex\">\n          <div >{Math.floor(seconds / 10)}</div>\n          <div >{seconds % 10}</div>\n      </div>\n      </div>\n  );\n}\n\nexport default Timer;\n","function CustomButton({\n  displayName,\n  onClick,\n  isActive,\n  disabled,\n}: {\n  displayName: string;\n  onClick: () => void;\n  isActive?: boolean;\n  disabled?: boolean;\n}) {\n  return (\n    <input\n      type=\"button\"\n      className={\n        \"cursor-pointer border-none p-4 m-2 text-center inline-block rounded-lg font-medium\"\n      }\n      value={displayName}\n      onClick={() => onClick()}\n      disabled={disabled}\n    />\n  );\n}\nexport default CustomButton;\n","export const toTime = (score: number): string => {\n  return new Date(score * 1000).toISOString().substr(14, 5);\n};","import { useState } from \"react\";\nimport { GameState, RecordDto } from \"../../models\";\nimport useStore from \"../../store\";\nimport CustomButton from \"../common/ButtonController\";\nimport axios from \"axios\";\nimport { useMutation } from \"react-query\";\nimport { toTime } from \"../../utils/timeutils\";\n\nfunction UploadRecord() {\n  const { setState, time, gameId, hints } = useStore();\n  const [userName, setUserName] = useState<string>(\"\");\n\n  const axiosClient = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URI,\n  });\n\n  const uploadRecord = useMutation<Response, unknown, RecordDto>(\n    (data) => axiosClient.post(`/records`, data),\n    {\n      onSuccess: () => {\n        setState(GameState.NEW, gameId);\n      },\n    }\n  );\n\n  return (\n    <div>\n      <p>Your total score is: {toTime(time + hints * 60)}</p>\n      <input\n        type=\"text\"\n        onChange={(e) => setUserName(e.target.value)}\n        value={userName}\n        placeholder=\"Insert your username....\"\n      />\n      <CustomButton\n        displayName=\"Don't upload\"\n        onClick={() => setState(GameState.EMPTY)}\n      />\n      <CustomButton\n        displayName=\"Upload\"\n        onClick={() => {\n          const record: RecordDto = {\n            gameId: gameId || \"\",\n            score: time + hints * 60,\n            userName: userName,\n          };\n          uploadRecord.mutate(record);\n        }}\n        disabled={userName?.length === 0}\n      />\n    </div>\n  );\n}\n\nexport default UploadRecord;\n","import { useEffect } from \"react\";\n\nconst useOutsideClick = (ref: any, callback: Function) => {\n  const handleClick = (e: Event) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;","type CellInputProps = {\n  size: number;\n  onClick: (newValue: number) => void;\n};\nconst CellInput = ({ size, onClick }: CellInputProps) => {\n  return (\n    <div className={`grid grid-cols-${Math.sqrt(size)} rounded-lg `}>\n      {Array.from(Array(size).keys()).map((i) => (\n        <div\n          key={i}\n          className=\"col-span-1 p-2 text-white border-2 rounded-lg bg-green-400 \"\n          onClick={() => onClick(i + 1)}\n        >\n          {i + 1}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CellInput;\n","import React, { createRef } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\nimport useOutsideClick from \"../../utils/outside-click\";\nimport CellInput from \"./CellInput\";\nimport useStore from \"../../store\";\n\ntype CellProps = {\n  hasBottomBorder: boolean;\n  hasRightBorder: boolean;\n  row: number;\n  column: number;\n  value: number;\n  isDeletable: boolean;\n  size: number;\n};\n\nconst getReadableValue = (value: number) => {\n  return value === 0 ? \"\" : value;\n};\n\nfunction Cell({ row, column, value, isDeletable, size, hasBottomBorder, hasRightBorder }: CellProps) {\n  const setCell = useStore((s) => s.setCell);\n\n  const [popoverShow, setPopoverShow] = React.useState(false);\n  const cellRef = createRef<HTMLDivElement>();\n  const popoverRef = createRef<HTMLDivElement>();\n\n  const openPopover = () => {\n    if (cellRef.current !== null && popoverRef.current !== null) {\n      createPopper(cellRef.current, popoverRef.current, {\n        placement: \"top\",\n      });\n      setPopoverShow(true);\n    }\n  };\n  const closePopover = () => {\n    setPopoverShow(false);\n  };\n  const onValueChange = (value: number) => {\n    setCell(row, column, value);\n    closePopover();\n  };\n  useOutsideClick(cellRef, () => closePopover());\n  const cellBorder = () => {\n    if (hasBottomBorder && hasRightBorder) {\n      return \"border-b-2 border-r-2 border-l border-t\"\n    }\n    if (hasBottomBorder) {\n      return \"border-b-2 border-l border-t border-r\"\n    }\n    if (hasRightBorder) {\n      return \"border-r-2 border-l border-t border-b\"\n    }\n    \n    return \"border\";\n  };\n  \n  return (\n    <>\n      <div\n        className={`border-gray-800 ${\n          popoverShow ? \"active-shadow\" : \"\"\n        } ${cellBorder()}\n      `}\n        onClick={() => {\n          if (isDeletable) {\n            openPopover();\n          }\n        }}\n        ref={cellRef}\n      >\n        <span\n          className={\n            `${isDeletable ? null : \"font-bold \"}` +\n            \" h-8 w-8 lg:w-16 lg:h-16 md:w-12 md:h-12 flex items-center justify-center\"\n          }\n        >\n          {getReadableValue(value)}\n        </span>\n      </div>\n      <div\n        className={\n          (popoverShow ? \"\" : \"hidden \") +\n          \"border-0 mb-3 block z-50 font-normal text-sm max-w-xs text-left font-semibold rounded-lg\"\n        }\n        ref={popoverRef}\n      >\n        <CellInput\n          size={size}\n          onClick={(newValue) => onValueChange(newValue)}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default Cell;\n","import { CellModel } from \"../../models\";\nimport Cell from \"./Cell\";\n\ntype RowProps = {\n  index: number;\n  row: CellModel[];\n};\n\nfunction Row({ index, row }: RowProps) {\n  const cellGrid = [];\n  for (let columnIndex = 0; columnIndex < row.length; columnIndex++) {\n    const cell = (\n      <Cell\n        key={columnIndex}\n        hasBottomBorder={isSection(index, row.length)}\n        hasRightBorder={isSection(columnIndex, row.length)}\n        row={index}\n        column={columnIndex}\n        size={row.length}\n        value={row[columnIndex].value}\n        isDeletable={row[columnIndex].isDeletable}\n      />\n    );\n    cellGrid.push(cell);\n  }\n  return (\n      <div className={`grid grid-cols-${row.length}`}>\n        {cellGrid.map((c) => c)}\n      </div>\n  );\n}\n\nfunction isSection(index: number, size: number) {\n  return (index + 1) % Math.sqrt(size) === 0;\n}\n\nexport default Row;\n","import { CSSProperties } from \"react\";\nimport Modal from \"react-modal\";\n\nimport { GameState } from \"../../models\";\nimport useStore from \"../../store\";\nimport UploadRecord from \"../upload-record\";\nimport Row from \"./Row\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\",\n  } as CSSProperties, // due flexWrap is not a valid type of Modal.Styles\n};\n\nfunction Game() {\n  const { grid, state, setState } = useStore();\n\n  const gameGrid = [];\n\n  for (let rowIndex = 0; rowIndex < grid.length; rowIndex++) {\n    gameGrid.push(<Row key={rowIndex} index={rowIndex} row={grid[rowIndex]} />);\n  }\n  return (\n    <div className=\"flex m-auto h-full items-center\">\n      <div\n        className={`grid grid-rows-${\n          grid.length\n        } border-2 border-gray-800`}\n      >\n        {gameGrid.map((row) => row)}\n      </div>\n      <Modal\n        isOpen={state === GameState.FINISHED}\n        onAfterClose={() => setState(GameState.EMPTY)}\n        style={customStyles}\n      >\n        <UploadRecord />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Game;\n","import Game from \"./Game\";\n\nexport default Game","interface HeaderButtonProps {\n  value: string;\n  onClick: () => void;\n}\nfunction HeaderButton({ value, onClick }: HeaderButtonProps) {\n  return (\n    <button\n      className=\"text-white bg-transparent border border-solid border-white hover:bg-white hover:text-green-500 active:bg-white text-xs uppercase font-bold px-3 py-2  rounded-full outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n      type=\"button\"\n      onClick={() => onClick()}\n    >\n      {value}\n    </button>\n  );\n}\n\nexport default HeaderButton;\n","const NavItem: React.FC = ({ children }) => (\n  <li className=\"nav-item mr-4\">{children}</li>\n);\nexport default NavItem;\n","import { ModalState } from \"../../models\";\nimport useStore from \"../../store\";\nimport HeaderButton from \"./HeaderButton\";\nimport NavItem from \"./NavItem\";\n\nfunction Header() {\n  const { gameId, setModalState } = useStore();\n\n  return (\n    <>\n      <nav className=\"relative flex items-center justify-between px-2 py-3 bg-green-500 mb-3\">\n        <div className=\"w-full px-4 flex items-center justify-between\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <p className=\"text-sm font-bold leading-relaxed inline-block whitespace-nowrap uppercase text-white\">\n              {gameId ? gameId : \"Sudoku\"}\n            </p>\n          </div>\n          <div className={\"flex flex-grow items-center\"}>\n            <ul className=\"flex flex-row list-none ml-auto\">\n              <NavItem>\n                <HeaderButton\n                  value=\"Challenge\"\n                  onClick={() => setModalState(ModalState.CHALLENGE)}\n                />\n              </NavItem>\n              <NavItem>\n                <HeaderButton\n                  value=\"Solo\"\n                  onClick={() => setModalState(ModalState.SOLO)}\n                />\n              </NavItem>\n              {/*  <NavItem>\n                <HeaderButton value=\"Hint\" onClick={() => {}} />\n              </NavItem> */}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","interface BaseModalProps {\n  title: string;\n  showModal: boolean;\n  closeModal: () => void;\n}\nconst BaseModal: React.FC<BaseModalProps> = ({\n  title,\n  showModal,\n  closeModal,\n  children,\n}) => {\n  return (\n    <>\n      {showModal ? (\n        <>\n          <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n              {/*content*/}\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                {/*header*/}\n                <div className=\"flex border-b border-solid border-blueGray-200 rounded-t\">\n                  <p className=\"m-auto text-green-500 text-3xl font-semibold text-center\">\n                    {title}\n                    <span className=\"text-black text-3xl font-semibold text-center\">\n                      {\" \"}\n                      Mode\n                    </span>\n                  </p>\n                </div>\n                {/*body*/}\n                {children}\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default BaseModal;\n","import { ModalState } from \"../../models\";\nimport useStore from \"../../store\";\nimport BaseModal from \"./BaseModal\";\n\nconst ChallengeInitializer = () => {\n  const { modalState, setModalState } = useStore();\n  const close = () => setModalState(ModalState.NONE);\n  return (\n    <BaseModal\n      title={\"Challenge\"}\n      showModal={modalState === ModalState.CHALLENGE}\n      closeModal={() => close()}\n    >\n      <div className=\"relative p-6 flex-auto\">\n        <p className=\"my-4 text-blueGray-500 text-lg leading-relaxed\">\n          I always felt like I could do anything. That’s the main thing people\n          are controlled by! Thoughts- their perception of themselves! They're\n          slowed down by their perception of themselves. If you're taught you\n          can’t do anything, you won’t do anything. I was taught I could do\n          everything.\n        </p>\n      </div>\n      {/*footer*/}\n      <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\n        <button\n          className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n          type=\"button\"\n          onClick={() => close()}\n        >\n          Close\n        </button>\n        <button\n          className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n          type=\"button\"\n          onClick={() => close()}\n        >\n          Save Changes\n        </button>\n      </div>\n    </BaseModal>\n  );\n};\n\nexport default ChallengeInitializer;\n","import axios from \"axios\";\nimport { GameDto, GameSize, ModalState } from \"../../models\";\nimport useStore from \"../../store\";\nimport BaseModal from \"./BaseModal\";\n\nconst SoloInitializer = () => {\n  const { modalState, setGrid, setModalState, setSize, size } = useStore();\n  const close = () => setModalState(ModalState.NONE);\n  const axiosClient = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URI,\n  });\n  const fetchRandomGame = () => {\n    setModalState(ModalState.LOADING);\n    axiosClient.get<GameDto>(`/games/random/${size}`).then(({ data: game }) => {\n      setGrid(game);\n      setModalState(ModalState.NONE);\n    });\n  };\n  return (\n    <BaseModal\n      title={\"Solo\"}\n      showModal={modalState === ModalState.SOLO}\n      closeModal={() => close()}\n    >\n      <div className=\"h-40 w-96 p-4 flex justify-center items-center\">\n        <button\n          className={`${\n            size === GameSize.small\n              ? \"bg-green-500 \"\n              : \"bg-transparent  hover:bg-white hover:text-green-500 active:bg-white \"\n          }border border-solid border-green-500 text-xs uppercase font-bold px-3 py-2 rounded-full outline-none focus:outline-none mr-4 mb-1 ease-linear transition-all duration-150`}\n          type=\"button\"\n          onClick={() => setSize(GameSize.small)}\n        >\n          Small\n        </button>\n        <button\n          className={`${\n            size === GameSize.normal\n              ? \"bg-green-500 \"\n              : \"bg-transparent  hover:bg-white hover:text-green-500 active:bg-white \"\n          }border border-solid border-green-500 text-xs uppercase font-bold px-3 py-2 rounded-full outline-none focus:outline-none mb-1 ease-linear transition-all duration-150`}\n          type=\"button\"\n          onClick={() => setSize(GameSize.normal)}\n        >\n          Normal\n        </button>\n      </div>\n      {/*footer*/}\n      <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\n        <button\n          className=\"text-green-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n          type=\"button\"\n          onClick={() => close()}\n        >\n          Close\n        </button>\n        <button\n          className=\"bg-green-500 text-white font-bold uppercase text-sm px-6 py-3 rounded-full shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ml-auto ease-linear transition-all duration-150\"\n          type=\"button\"\n          onClick={() => fetchRandomGame()}\n        >\n          Start\n        </button>\n      </div>\n    </BaseModal>\n  );\n};\n\nexport default SoloInitializer;\n","import useStore from \"../../store\";\nimport { toTime } from \"../../utils/timeutils\";\n\nfunction LeaderBoard() {\n  const records = useStore((store) => store.records);\n\n  return (\n    <div>\n      {records.length ? (\n        records.map((record, i) => (\n          <div className=\"flex ml-3\" key={i}>\n            <h4 className=\"mr-4\">{i + 1}.</h4>\n            <h3 className=\"mr-2\">{toTime(record.score)}</h3>\n            <p>{record.userName}</p>\n          </div>\n        ))\n      ) : (\n        <div className=\"rlex ml-3\">\n          <p>\n            <i>Nobody finished this game yet </i>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LeaderBoard;\n","import React from \"react\";\nimport LeaderBoard from \"../leaderboard\";\n\nconst RightSidePanel = () => {\n  const [openTab, setOpenTab] = React.useState(1);\n  return (\n    <>\n      <div className=\"flex flex-wrap m-x-auto\">\n        <div className=\"w-full\">\n          <ul\n            className=\"flex mb-0 list-none flex-wrap pb-4 flex-row\"\n            role=\"tablist\"\n          >\n            <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n              <a\n                className={\n                  \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded block leading-normal \" +\n                  (openTab === 1\n                    ? \"text-white bg-green-600\"\n                    : \"text-green-600 bg-white\")\n                }\n                onClick={(e) => {\n                  e.preventDefault();\n                  setOpenTab(1);\n                }}\n                data-toggle=\"tab\"\n                href=\"#link1\"\n                role=\"tablist\"\n              >\n                Leaderboard\n              </a>\n            </li>\n            <li className=\"-mb-px mr-2 last:mr-0 flex-auto text-center\">\n              <a\n                className={\n                  \"text-xs font-bold uppercase px-5 py-3 shadow-lg rounded block leading-normal \" +\n                  (openTab === 3\n                    ? \"text-white bg-green-600\"\n                    : \"text-green-600 bg-white\")\n                }\n                onClick={(e) => {\n                  e.preventDefault();\n                  setOpenTab(3);\n                }}\n                data-toggle=\"tab\"\n                href=\"#link3\"\n                role=\"tablist\"\n              >\n                Options\n              </a>\n            </li>\n          </ul>\n          <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\n            <div className=\"px-4 py-5 flex-auto\">\n              <div className=\"tab-content tab-space\">\n                <div className={openTab === 1 ? \"block\" : \"hidden\"} id=\"link1\">\n                  <LeaderBoard />\n                </div>\n                <div className={openTab === 2 ? \"block\" : \"hidden\"} id=\"link2\">\n                  <p>\n                    Completely synergize resource taxing relationships via\n                    premier niche markets. Professionally cultivate one-to-one\n                    customer service with robust ideas.\n                    <br />\n                    <br />\n                    Dynamically innovate resource-leveling customer service for\n                    state of the art customer service.\n                  </p>\n                </div>\n                <div className={openTab === 3 ? \"block\" : \"hidden\"} id=\"link3\">\n                  <p>\n                    Efficiently unleash cross-media information without\n                    cross-media value. Quickly maximize timely deliverables for\n                    real-time schemas.\n                    <br />\n                    <br /> Dramatically maintain clicks-and-mortar solutions\n                    without functional solutions.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RightSidePanel;\n","import { QueryClient, QueryClientProvider } from \"react-query\";\nimport Timer from \"./components/control-panel/timer\";\nimport Game from \"./components/game\";\nimport Header from \"./components/header\";\nimport ChallengeInitializer from \"./components/modals/ChallengeInitializer\";\nimport SoloInitializer from \"./components/modals/SoloInitializer\";\nimport RightSidePanel from \"./components/right-side-panel\";\n\nfunction App() {\n  const queryClient = new QueryClient();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Header />\n      <div className=\"grid xs:grid-cols-1 sm:grid-cols-2 gap-2\">\n        <Game />\n        <div className=\"sm:grid w-full h-full\">\n            <Timer />\n            <RightSidePanel />\n        </div>\n      </div>\n      <ChallengeInitializer />\n      <SoloInitializer />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}